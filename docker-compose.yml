version: '3.8'

services:
  api:
    container_name: restaurant-api
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - restaurant-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  postgres:
    container_name: restaurant-db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

networks:
  restaurant-network:
    driver: bridge

volumes:
  postgres_data:
